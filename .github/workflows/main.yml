# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: Vite build
      run: npm run build --if-present

    - id: generate_manifest
      run: |
        cat module-template.json > module.json
        
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: restackio/update-json-file-action@2.1
      with:
        file: 'module.json'
        fields: "{\"version\": \"${{env.VERSION}}\"}"

      # create a zip file with all files required by the module to add to the release
    - run: zip -r ./module.zip module.json dist
      # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # set this to false if you want to prevent updating existing releases
        name: ${{github.event.release.name}}
        draft: false
        prerelease: false
        token: ${{secrets.GITHUB_TOKEN}}
        artifacts: './module.json, ./module.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}
